import React, { Component } from 'react';
import { Route, Link } from 'react-router-dom';
import { connect } from 'react-redux';
// import testImg from '../../img/Detailpic.png'
// import callApi from '../../config/utils/apiCaller';
import { showLoader, hideLoader, getUserLogin } from '../../actions/index';
import Jump from 'react-reveal/Jump';

const menus = [
    {
        name: 'Về chúng tôi',
        to: '/aboutUs/us',
        exact: true,
    },
    {
        name: 'Cách đặt chỗ',
        to: '/aboutUs/howToOrder',
        exact: true,
    },
    {
        name: 'Liên hệ',
        to: '/aboutUs/contact',
        exact: false,
    }
];

const menus2 = [
    {
        name: 'Chính sách & quyền riêng tư',
        to: '/aboutUs/policy',
        exact: true,
    },
    {
        name: 'Điều khoản & điều kiện',
        to: '/aboutUs/termsConditions',
        exact: true,
    },
    {
        name: 'Quy chế hoạt động',
        to: '/aboutUs/howItWorks',
        exact: false,
    },
    {
        name: 'F.A.Q',
        to: '/aboutUs/FAQ',
        exact: false,
    }
];



const MenuLink = ({ label, to, activeOnlyWhenExact }) => {
    return (
        <Route
            path={to}
            exact={activeOnlyWhenExact}
            children={({ match }) => {
                var myActive = match ? 'myActive' : 'labelPointer';
                return (

                    <div className="mr-20 col-12">
                        {/* <Jump> */}
                            <Link className={`${myActive}`}
                                to={{
                                    pathname: to
                                }}
                            >
                                <li >{label}</li>
                            </Link>
                        {/* </Jump> */}
                    </div>

                );
            }}
        />
    )
}

class AboutUsMenu extends Component {
    constructor(props) {
        super(props);
        this.state = {
        }
    }


    render() {
        return (
            <div className="leftPartUserDetail">
                <div className="outer row no-gutters">
                    <div className="inner circleCamera">
                    </div>
                </div>
                <div style={{ paddingTop: "0px" }} className="outer row no-gutters">
                    <div className="svgLOGO">
                        <svg width="158" height="49" viewBox="0 0 158 49" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M24.6295 5.80541H27.4465C28.4172 5.80541 29.2166 5.00599 29.2166 4.03528V2.03674C29.2166 1.06602 28.4172 0.266602 27.4465 0.266602H24.6295C23.6588 0.266602 22.8594 1.06602 22.8594 2.03674V4.03528C22.8594 5.00599 23.6588 5.80541 24.6295 5.80541Z" fill="#FF7062" />
                            <path d="M27.085 10.5256H25.2958C23.8683 10.5256 23.145 11.3059 23.145 12.3147V12.5051C21.9649 11.6866 20.6325 11.0395 19.224 10.6017C18.1582 10.183 16.8258 9.87842 15.1699 9.87842C15.0557 9.87842 14.9605 9.87842 14.8463 9.87842C14.7321 9.87842 14.6179 9.87842 14.5037 9.87842C6.47146 9.87842 0 15.7218 0 23.9253C0 32.1859 6.47146 37.9722 14.5037 37.9722C17.492 37.9722 20.2519 37.1728 22.574 35.7452V36.183C22.574 40.9605 19.1098 42.7116 14.9986 42.7116C12.5242 42.7116 10.8492 42.1786 9.59299 41.7028C8.16546 41.2269 7.38508 41.5886 6.81407 42.9209L6.39533 44.1201C5.82431 45.4905 6.18596 46.3851 7.55638 46.9561C9.40265 47.7555 12.3909 48.3836 15.3983 48.3836C22.022 48.3836 29.2738 44.9195 29.2738 35.7072V12.7335C29.2548 11.3059 28.5125 10.5256 27.085 10.5256ZM14.7702 32.3572C10.2972 32.3572 6.68083 28.6076 6.68083 23.9824C6.68083 19.3572 10.2972 15.6076 14.7702 15.6076C14.9605 15.6076 15.1508 15.6076 15.3221 15.6266C15.3412 15.6266 15.3412 15.6266 15.3412 15.6266C15.3983 15.6266 15.4554 15.6456 15.5315 15.6456C19.6428 16.0453 22.8595 19.6237 22.8595 23.9824C22.8595 28.6076 19.2431 32.3572 14.7702 32.3572Z" fill="#5B5B5B" />
                            <path d="M44.9768 9.89746C53.1232 9.89746 59.7469 15.7408 59.7469 23.9253C59.7469 32.1859 53.1232 37.9531 44.9768 37.9531C36.8303 37.9531 30.2637 32.1669 30.2637 23.9253C30.2447 15.7218 36.8303 9.89746 44.9768 9.89746ZM44.9768 32.2811C49.3355 32.2811 52.9709 28.9121 52.9709 23.9253C52.9709 18.9765 49.3355 15.5695 44.9768 15.5695C40.618 15.5695 37.0397 18.9956 37.0397 23.9253C37.0397 28.9312 40.599 32.2811 44.9768 32.2811Z" fill="#5B5B5B" />
                            <path d="M107.694 9.89746C115.84 9.89746 122.464 15.7408 122.464 23.9253C122.464 32.1859 115.84 37.9531 107.694 37.9531C99.5471 37.9531 92.9805 32.1669 92.9805 23.9253C92.9615 15.7218 99.5281 9.89746 107.694 9.89746ZM107.694 32.2811C112.052 32.2811 115.688 28.9121 115.688 23.9253C115.688 18.9765 112.052 15.5695 107.694 15.5695C103.335 15.5695 99.7565 18.9956 99.7565 23.9253C99.7375 28.9312 103.316 32.2811 107.694 32.2811Z" fill="#5B5B5B" />
                            <path d="M76.5717 9.89753C76.5146 9.89753 76.4385 9.89753 76.3814 9.89753C76.3243 9.89753 76.2672 9.89753 76.2101 9.89753C75.62 9.89753 75.049 9.93559 74.5351 10.0308C72.1369 10.3163 69.9289 11.1347 68.0636 12.3719C68.0636 12.2387 68.0636 12.1054 68.0636 11.9722V2.20791C68.0636 0.780382 67.3213 0 65.8557 0H63.5907C62.1632 0 61.3828 0.780382 61.3828 2.20791V35.1172C61.3828 36.5828 62.1632 37.3251 63.5907 37.3251H65.3799C66.8455 37.3251 67.5878 36.5828 67.5878 35.4408V35.1933C69.0344 36.2211 70.6903 36.9825 72.4985 37.4583C73.4311 37.7629 74.5351 37.9722 75.7913 37.9722C75.9055 37.9722 76.0388 37.9722 76.153 37.9722C76.2862 37.9722 76.4385 37.9722 76.5717 37.9722C84.7181 37.9722 91.3419 32.186 91.3419 23.9254C91.3419 15.7218 84.7181 9.89753 76.5717 9.89753ZM75.6391 32.2431C71.6991 31.8053 68.6156 28.5696 68.6156 23.9254C68.6156 19.4524 71.5468 16.2358 75.3345 15.6647C75.7342 15.6076 76.153 15.5696 76.5717 15.5696C80.9304 15.5696 84.5659 18.9956 84.5659 23.9254C84.5659 28.9122 80.9304 32.2812 76.5717 32.2812C76.2481 32.2812 75.9436 32.2621 75.6391 32.2431Z" fill="#5B5B5B" />
                            <path d="M124.404 2.20791C124.404 0.780382 125.185 0 126.612 0H128.877C130.343 0 131.085 0.780382 131.085 2.20791V19.9854H134.397L139.974 11.9912C140.602 10.9444 141.401 10.5256 142.601 10.5256H145.113C146.902 10.5256 147.473 11.7438 146.483 13.1523L139.803 22.5169V22.6311L147.683 34.7175C148.577 36.2402 148.006 37.3441 146.217 37.3441H143.381C142.163 37.3441 141.382 36.8683 140.811 35.8214L134.549 25.6194H131.085V35.1362C131.085 36.6018 130.343 37.3441 128.877 37.3441H126.612C125.185 37.3441 124.404 36.6018 124.404 35.1362V2.20791Z" fill="#5B5B5B" />
                            <path d="M150.328 3.78771V2.20791C150.328 0.780382 151.07 0 152.479 0H154.801C156.229 0 157.009 0.780382 157.009 2.20791V3.78771C157.009 5.21524 156.229 5.93852 154.801 5.93852H152.479C151.051 5.95755 150.328 5.21524 150.328 3.78771ZM150.328 12.7336C150.328 11.306 151.07 10.5256 152.479 10.5256H154.801C156.229 10.5256 156.952 11.306 156.952 12.7336V35.1362C156.952 36.6018 156.21 37.3441 154.801 37.3441H152.479C151.051 37.3441 150.328 36.6018 150.328 35.1362V12.7336Z" fill="#5B5B5B" />
                        </svg>
                    </div>
                </div>
                <div className="row">
                    {this.showMenus(menus)}
                </div>
                <div className="row">
                    <div style={{ padding: "0px 60px 0px 60px" }} className="col-12">
                        <hr style={{ border: "1.5px solid #E3E3E3", borderRadius: "2px" }} />
                    </div>
                </div>
                <div className="row">
                    {this.showMenus(menus2)}
                </div>
            </div>

        );
    }

    showMenus = (menus) => {
        var result = null;
        if (menus.length > 0) {
            result = menus.map((menu, index) => {
                return (
                    <MenuLink
                        key={index}
                        label={menu.name}
                        to={menu.to}
                        activeOnlyWhenExact={menu.exact}
                        mark={menu.mark}
                    />
                );
            });
        }
        return result;
    }
}

const mapStateToProps = state => {
    return {
        loggedUser: state.User,
    }
}

const mapDispatchToProps = (dispatch, props) => {
    return {
        fetchUserDetail: (user) => {
            dispatch(getUserLogin(user))
        },
        showLoader: () => {
            dispatch(showLoader())
        },
        hideLoader: () => {
            dispatch(hideLoader())
        }
    }
}

export default connect(mapStateToProps, mapDispatchToProps)(AboutUsMenu);
